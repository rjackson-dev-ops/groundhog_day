{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Contains configuration information to automatically build a Ubuntu Ruby Dev server.",
    "Parameters": {
      "KeyName": {
            "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
      }
    },
    "Mappings": {
        "Region2InstanceSize": {
            "us-east-1": {
                "Size": "t1.micro"
            },
            "us-west-1": {
                "Size": "t1.micro"
            },
            "us-west-2": {
                "Size": "t1.micro"
            }
        },
        "Region2AMI": {
            "us-east-1": {
                "AMI": "ami-c65be9ae"
            },
            "us-west-1": {
                "AMI": "ami-957070d0"
            },
            "us-west-2": {
                "AMI": "ami-5b58266b"
            }
        },
        "Region2AZ": {
            "us-east-1": {
                "AZ": "us-east-1d"
            },
            "us-west-1": {
                "AZ": "us-west-1c"
            },
            "us-west-2": {
                "AZ": "us-west-2c"
            }
        }
    },
    "Resources": {
        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH Access",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },        
        "WaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "WaitForInstance": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "DevInstance",
            "Properties": {
                "Handle": {
                    "Ref": "WaitHandle"
                },
                "Timeout": "1800"
            }
        },
        "DevInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "config" : {
                        "packages" : {
                            "apt" : {
                                "git" : [],
                                "postgresql" : [],
                                "ruby1.9.1-full" : [],
                                "ruby-bundler" : [],
                                "rubygems1.9.1" : [],
                                "libxslt1-dev" : [],
                                "libxml2-dev" : [],
                                "libsasl2-dev" : [],
                                "libpq-dev" : [],
                                "sqlite3" : [],
                                "memcached" : [],
                                "build-essential" : [],
                                "libsqlite3-dev" : [],
                                "libhunspell-1.3-0" : [],
                                "gettext" : []
                            }
                        },
                        "commands" : {
                            "00-add-rvm-key" : {
                                "command" : { "Fn::Join" : ["", [
                                    "\\curl -sSL https://s3.amazonaws.com/StelligentLabsResources/rvm/mpapis.asc | gpg --import -"
                                ]] },
                                "waitAfterCompletion" : "0",
                                "ignoreErrors" : "false"
                            },
                            "10-install-rvm" : {
                                "command" : { "Fn::Join" : ["", [
                                    "\\curl -sSL https://s3.amazonaws.com/StelligentLabsResources/rvm/rvm-installer > /root/rvm-installer.sh;",
                                    "chmod 700 /root/rvm-installer.sh;",
                                    "/root/rvm-installer.sh --version 1.26.3 --source s3.amazonaws.com/StelligentLabsResources/rvm"
                                  ]] },
                                "waitAfterCompletion" : "0",
                                "ignoreErrors" : "false"
                            },
                            "11-install-ruby-1.9.3" : {
                                "command" : { "Fn::Join" : ["", [
                                    "/usr/local/rvm/bin/rvm install ruby-1.9.3-p551"
                                ]]},
                                "waitAfterCompletion" : "0",
                                "ignoreErrors" : "true"
                            },
                            "12-setup-user-defaults" : {
                                "command" : { "Fn::Join" : ["", [
                                    "echo 'rvm user gemsets\\n' >> ~ubuntu/.profile",
                                    "echo 'cd /;cd ~/\\n' >> ~ubuntu/.profile",
                                    "echo 'rvm default 1.9.3\\n' >> ~ubuntu/.profile",
                                    "echo 'cd /;cd ~/\\n' >> ~ubuntu/.profile",
                                    "echo 'which bundler || gem install bundler\\n' >> ~ubuntu/.profile"
                                ]]},
                                "waitAfterCompletion" : "0",
                                "ignoreErrors" : "true"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
                "Tags" : [
                    {
                       "Key" : "Name",
                       "Value" : { "Ref" : "AWS::StackName"} 
                    },
                      {
                       "Key" : "Type",
                       "Value" : "Ubuntu-Ruby-Dev-Environment"
                    }  
                ],  
                "AvailabilityZone": { "Fn::FindInMap" : [ "Region2AZ", { "Ref" : "AWS::Region" }, "AZ" ]},
                "ImageId": { "Fn::FindInMap" : [ "Region2AMI", { "Ref" : "AWS::Region" }, "AMI" ]},
                "InstanceType": { "Fn::FindInMap" : [ "Region2InstanceSize", { "Ref" : "AWS::Region" }, "Size" ]},
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex\n",
                                "mkdir -p /tmp/userdata/\n",
                                "date > /tmp/userdata/starttime\n",
                                "apt-get update\n",
                                "apt-get -y install python-setuptools\n",
                                "wget -P /root https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz","\n",
                                "mkdir -p /root/aws-cfn-bootstrap-latest","\n",
                                "tar xvfz /root/aws-cfn-bootstrap-latest.tar.gz --strip-components=1 -C /root/aws-cfn-bootstrap-latest","\n",
                                "easy_install /root/aws-cfn-bootstrap-latest/","\n",
                                "/usr/local/bin/cfn-init -v -s ", { "Ref" : "AWS::StackId" }, " -r DevInstance ",
                                "         --region ", { "Ref" : "AWS::Region" }, "\n",
                                "/usr/local/bin/cfn-signal -e $? '", { "Ref" : "WaitHandle" }, "'\n",
                                "date > /tmp/userdata/stoptime\n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs" : {
        "InstanceId" : {
            "Description" : "InstanceId of the newly created EC2 instance",
            "Value" : { "Ref" : "DevInstance" }
        },
        "AZ" : {
            "Description" : "Availability Zone of the newly created EC2 instance",
            "Value" : { "Fn::GetAtt" : [ "DevInstance", "AvailabilityZone" ] }
        },
        "URL" : {
            "Description" : "Public (Elastic) IP Address",
            "Value" : { "Fn::GetAtt" : [ "DevInstance", "PublicIp" ] }
        }
    }
}
